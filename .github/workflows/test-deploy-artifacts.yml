name: Deploy Framework

on:
  workflow_dispatch:
    inputs:
      environment_var:
        description: 'Environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

env:
  DATABRICKS_HOST_DEVELOPMENT: "https://adb-development.azuredatabricks.net"
  DATABRICKS_HOST_STAGING: "https://adb-staging.azuredatabricks.net"
  DATABRICKS_HOST_PRODUCTION: "https://adb-production.azuredatabricks.net"

jobs:
  Download_JFrog_Artifact:
    runs-on: ubuntu-latest
    steps:
      - name: Create Mock Artifact
        run: |
          mkdir -p databricks-workflows/dxworkflowsv5.8
          echo "This is a test artifact for Databricks workflows" > databricks-workflows/dxworkflowsv5.8/mock_file.txt

      - name: Upload Mock Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Artifact_Dx_Workflows
          path: ./databricks-workflows/dxworkflowsv5.8

  Deploy_Databricks:
    runs-on: ubuntu-latest
    needs: Download_JFrog_Artifact
    steps:
      - name: Download Artifacts Locally
        uses: actions/download-artifact@v3
        with:
          name: Artifact_Dx_Workflows
          path: ./

      - name: Untar the artifact
        run: tar -xzf dx_workflows_artifact.tar.gz

      - name: Set Environment Variables
        run: |
          ENV_UPPER=$(echo "${{ github.event.inputs.environment_var }}" | tr '[:lower:]' '[:upper:]')
          echo "DATABRICKS_HOST=${{ env[format('DATABRICKS_HOST_{0}', ENV_UPPER)] }}" >> $GITHUB_ENV
          echo "DATABRICKS_TOKEN=${{ secrets[format('DATABRICKS_TOKEN_{0}', ENV_UPPER)] }}" >> $GITHUB_ENV

      - name: Replace Host URL in databricks.yml
        run: sed -i "s|\${DATABRICKS_HOST_${ENV_UPPER}}|${DATABRICKS_HOST}|g" databricks.yml

      - name: Configure Databricks CLI
        uses: databricks/setup-cli@main  
        env:
          DATABRICKS_TOKEN: ${{ env.DATABRICKS_TOKEN }}
          DATABRICKS_HOST: ${{ env.DATABRICKS_HOST }}

      - name: Validate Databricks Bundle
        run: databricks bundle validate -t ${{ github.event.inputs.environment_var }}

      - name: Deploy Databricks Bundle
        run: databricks bundle deploy -t ${{ github.event.inputs.environment_var }}
