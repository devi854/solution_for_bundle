name: Deploy Framework

on:
  workflow_dispatch:
    inputs:
      environment_var:
        description: 'Environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

env:
  JFrog_URL: "https://artifacts.companyorg.com"
  ARTIFACTORY_NAME: "generic-local"
  DATABRICKS_HOST_DEVELOPMENT: "https://adb-1513518831488714.14.azuredatabricks.net"
  DATABRICKS_HOST_STAGING: "https://adb-staging.azuredatabricks.net"
  DATABRICKS_HOST_PRODUCTION: "https://adb-production.azuredatabricks.net"

jobs:

  Deploy_Databricks:
    runs-on: ubuntu-latest
    steps:

      - name: Set Environment Variables Based on Input
        run: |
          ENV_UPPER=$(echo "${{ github.event.inputs.environment_var }}" | tr '[:lower:]' '[:upper:]')
          echo "ðŸ”¹ Selected Deployment Environment: $ENV_UPPER"

          if [[ "$ENV_UPPER" == "DEVELOPMENT" ]]; then
            echo "DATABRICKS_HOST=${{ env.DATABRICKS_HOST_DEVELOPMENT }}" >> $GITHUB_ENV
            echo "DATABRICKS_TOKEN=${{ secrets.DATABRICKS_TOKEN_DEVELOPMENT }}" >> $GITHUB_ENV
            echo "âœ… Deploying to DEVELOPMENT Databricks!"
          elif [[ "$ENV_UPPER" == "STAGING" ]]; then
            echo "DATABRICKS_HOST=${{ env.DATABRICKS_HOST_STAGING }}" >> $GITHUB_ENV
            echo "DATABRICKS_TOKEN=${{ secrets.DATABRICKS_TOKEN_STAGING }}" >> $GITHUB_ENV
            echo "âœ… Deploying to STAGING Databricks!"
          elif [[ "$ENV_UPPER" == "PRODUCTION" ]]; then
            echo "DATABRICKS_HOST=${{ env.DATABRICKS_HOST_PRODUCTION }}" >> $GITHUB_ENV
            echo "DATABRICKS_TOKEN=${{ secrets.DATABRICKS_TOKEN_PRODUCTION }}" >> $GITHUB_ENV
            echo "ðŸš€ Deploying to PRODUCTION Databricks!"
          fi

      - name: Display Set Environment Variables
        run: |
          echo "ðŸ”¹ DATABRICKS_HOST: $DATABRICKS_HOST"
          echo "ðŸ”¹ Deployment Environment: $ENV_UPPER"

      - name: Replace Host URL in databricks.yml
        run: sed -i "s|\${DATABRICKS_HOST_${ENV_UPPER}}|${DATABRICKS_HOST}|g" databricks.yml

      - name: Configure Databricks CLI
        uses: databricks/setup-cli@main  
        env:
          DATABRICKS_TOKEN: ${{ env.DATABRICKS_TOKEN }}
          DATABRICKS_HOST: ${{ env.DATABRICKS_HOST }}

      - name: Validate Databricks Bundle
        run: |
          echo "ðŸ”Ž Validating deployment for $ENV_UPPER..."
          databricks bundle validate -t ${{ github.event.inputs.environment_var }}

      - name: Deploy Databricks Bundle
        run: |
          echo "ðŸš€ Deploying to $ENV_UPPER environment..."
          databricks bundle deploy -t ${{ github.event.inputs.environment_var }}
          echo "âœ… Deployment to $ENV_UPPER completed successfully!"
